name: CI Pipeline

on:
  push:
    branches: [ "**" ]        # Run on every commit to any branch
  pull_request:
    branches: [ "**" ]        # Run for PRs from any branch
  workflow_dispatch:

permissions: write-all

jobs:
  gradle_check:
    name: Gradle Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@main
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@main

      - name: Run Gradle Check
        run: ./gradlew check

  maven_verify:
    name: Maven Verify
    needs: gradle_check              # ✅ Run only after Gradle check succeeds
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@main
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run Maven Verify
        run: mvn --batch-mode verify

  gradle_publish:
    name: Gradle Publish
    needs: [ gradle_check, maven_verify ]  # ✅ Run only after both succeed
    if: github.ref == 'refs/heads/master' && github.repository == 'YOUR-ORG/YOUR-REPO'  # ✅ Only for master branch of main repo
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@main
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        uses: gradle/actions/setup-gradle@main

      - name: Publish with Gradle
        run: ./gradlew publish
        env:
          ossrhUsername: ${{ secrets.OSSRHUSERNAME }}
          ossrhPassword: ${{ secrets.OSSRHPASSWORD }}

      - uses: actions/setup-python@main

      - name: Install XSLT Processor
        run: sudo apt-get install -y xsltproc sphinx-common

      - name: Install Python dependencies
        run: pip install furo myst_parser sphinx_substitution_extensions sphinx_issues sphinx_inline_tabs pygments

      - name: Build Sphinx documentation with Gradle
        run: FLOATING_TOC=false ./gradlew -DFLOATING_TOC=false gitChangelogTask renderRR xslt xmldoc sphinx

      - name: Configure GitHub Pages
        uses: actions/configure-pages@main

      - name: Upload artifact
        uses: actions/upload-pages-artifact@main
        with:
          path: 'build/sphinx'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@main
